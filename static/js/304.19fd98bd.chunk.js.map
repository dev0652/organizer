{"version":3,"file":"static/js/304.19fd98bd.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","styling/forms.js","components/Forms/Filter/Filter.styled.js","components/Forms/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","styling/links.js","components/Card/Card.styled.js","components/Forms/ContactFormMUI.js","components/Card/Card.jsx","components/Prompt/Prompt.styled.js","components/Prompt/Prompt.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  overflow-y: auto;\n  padding-right: 20px;\n`;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n`;\nexport const Name = styled.p``;\n\nexport const ContactLink = styled.a`\n  flex-grow: 1;\n  color: black;\n  font-size: 1.3rem;\n  text-decoration: none;\n  padding: 10px 20px;\n  border-radius: ${({ theme }) => theme.borderRadius.large};\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: #4285f4;\n    font-weight: 500;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport { ContactLink, List, ListItem } from './ContactsList.styled';\n\nimport { setSelectedContactId } from 'redux/contacts/slice';\n\n// ################################################\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  // If filtered, display only contacts matching the filter\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  // Sort contacts in alphabetical order\n  const sortedContacts = [...visibleContacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const handleContactClick = event => {\n    event.preventDefault();\n    dispatch(setSelectedContactId(event.target.id));\n  };\n\n  return (\n    <List>\n      {sortedContacts.map(({ id, name, phone }) => (\n        <ListItem key={id}>\n          <ContactLink href=\"\" onClick={handleContactClick} id={id}>\n            {name}\n          </ContactLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\nimport { theme } from 'styling/theme';\nimport { AccentedButton } from 'styling/buttons';\nimport MUITextField from '@mui/material/TextField';\n\nexport const TextField = styled(MUITextField)`\n  background-color: white;\n`;\n\n// export const TextField = styled.input`\n//   padding: 2px 25px 0;\n//   border-radius: ${theme.borderRadius.large};\n//   /* font-size: 1.1rem; */\n//   font-size: inherit;\n//   line-height: 2;\n//   /* background-color: white; */\n\n//   &::placeholder {\n//     color: Silver;\n//   }\n// `;\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  font-size: 1.3rem;\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SubmitButton = styled(AccentedButton)`\n  font-size: inherit;\n  line-height: 1.4;\n  border-radius: ${theme.borderRadius.large};\n`;\n","import styled from 'styled-components';\n\nimport { TextField as BaseTextField } from 'styling/forms';\n\nexport const TextField = styled(BaseTextField)`\n  width: 100%;\n  font-size: 1.3rem;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/filter/slice';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nimport { TextField } from './Filter.styled';\nimport { useEffect } from 'react';\n\nexport default function Filter() {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const textField = document.querySelector('#searchBox');\n\n    if (!textField) return;\n\n    if (items.length === 0) {\n      textField.setAttribute('disabled', '');\n    }\n\n    if (items.length > 0) {\n      textField.removeAttribute('disabled');\n    }\n  }, [items.length]);\n\n  const handleChange = event => {\n    const filter = event.target.value;\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    dispatch(updateFilter(normalizedFilter));\n  };\n\n  const getMessage = () => {\n    if (items.length === 0) return 'Phonebook is empty';\n    if (items.length === 1) return 'Not enough contacts to search in';\n\n    return `Search ${items.length} contacts`;\n  };\n\n  return (\n    <TextField\n      type=\"text\"\n      value={filter}\n      onChange={handleChange}\n      placeholder={getMessage()}\n      id=\"searchBox\"\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n  cursor: cell;\n`;\n\nexport const ModalContent = styled.div`\n  cursor: auto;\n\n  width: 90%;\n  max-width: 480px;\n  /* background-color: #fff; */\n  padding: 60px;\n  padding-top: 40px;\n  align-self: flex-start;\n  margin-top: 20vh;\n\n  border-radius: ${({ theme }) => theme.borderRadius.regular};\n\n  --background-fallback: rgb(245, 245, 245);\n  --gradient-start-color: rgba(240, 248, 255, 1);\n  --gradient-end-color: rgba(245, 245, 245, 1);\n\n  background: var(--background-fallback);\n  background: linear-gradient(\n    0deg,\n    var(--gradient-start-color) 55%,\n    var(--gradient-end-color) 100%\n  );\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Overlay, ModalContent } from './Modal.styled';\n\n// #######################################\n\nconst modalRoot = document.querySelector('#modal-root');\n\n// #######################################\n\nexport default function Modal({ onClose, children }) {\n  //\n  useEffect(() => {\n    const handleKeydown = event => {\n      if (event.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) onClose();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>,\n    modalRoot\n  );\n}\n\n// ####### PropTypes ######################\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { theme } from 'styling/theme';\n\nexport const BaseCardLink = styled.a`\n  text-decoration: none;\n  color: ${theme.colors.secondaryText};\n  font-size: 1.3rem;\n\n  &:hover,\n  &:focus {\n    color: ${theme.colors.accent};\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: black;\n  font-size: 1.1rem;\n  text-decoration: none;\n  padding: 8px 20px;\n  font-weight: 500;\n\n  border-radius: ${({ theme }) => theme.borderRadius.regular};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n\n  &.active {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: ${({ theme }) => theme.colors.accent};\n\n    /* color: ${({ theme }) => theme.colors.accent}; */\n\n    &:hover,\n    &:focus {\n      background-color: ${({ theme }) => theme.colors.accentDark};\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { BaseButton, BaseIconButton } from 'styling/buttons';\nimport { BaseCardLink } from 'styling/links';\n\nimport { BsTrash3 } from 'react-icons/bs';\n\nexport const CardWrapper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius.regular};\n\n  padding: 20px 30px;\n  flex-grow: 1;\n  max-width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius.regular};\n  overflow: hidden;\n  width: 200px;\n\n  box-shadow: ${({ theme }) => theme.boxShadow};\n`;\n\nexport const Image = styled.img`\n  object-position: center;\n  object-fit: cover;\n`;\n\nexport const Meta = styled.div`\n  font-size: 1.5rem;\n  color: black;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 2rem;\n  font-weight: 600;\n`;\n\nexport const TelephoneLink = styled(BaseCardLink)``;\n\nexport const EmailLink = styled(BaseCardLink)``;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const EditButton = styled(BaseButton)``;\n\nexport const DeleteButton = styled(BaseButton)`\n  &:hover,\n  &:focus {\n    color: whitesmoke;\n    background-color: ${({ theme }) => theme.colors.warning};\n    font-weight: 500;\n  }\n`;\n\nexport const DeleteIcon = styled(BsTrash3)`\n  --size: 60%;\n  /* height: var(--size); */\n  width: var(--size);\n`;\n\nexport const DeleteIconButton = styled(BaseIconButton)`\n  --size: 40px;\n\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.highlightedText};\n    background-color: ${({ theme }) => theme.colors.warning};\n    font-weight: 500;\n\n    & > ${DeleteIcon} {\n      transform: scale(1.1);\n    }\n  }\n`;\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport toast from 'react-hot-toast';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\nimport { TextField } from 'styling/forms';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// ################################################\n\nconst defaultTheme = createTheme();\n\nexport default function ContactFormMUI({\n  formType,\n  editValues = null,\n  toggleModal,\n}) {\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(selectContacts);\n  const { initNameValue, initNumberValue, buttonText } = getInitialValues(\n    formType,\n    editValues\n  );\n\n  const [name, setName] = useState(initNameValue);\n  const [number, setNumber] = useState(initNumberValue);\n  // const [email, setEmail] = useState(initEmailValue);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      // case 'email':\n      //   setEmail(value);\n      //   break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // const data = { name, number, email };\n    const data = { name, number };\n\n    const { operation, operationArgs, toastMessage } = getDispatchData(\n      formType,\n      editValues,\n      data\n    );\n    //\n    if (formType === 'add' && checkIfContactExists(items, name)) {\n      toast.error(`${name} is already a contact`);\n      return;\n    }\n\n    dispatch(operation(operationArgs))\n      .unwrap()\n      .then(data => {\n        if (data.error) throw new Error(data.payload);\n        return toast.success(toastMessage);\n      })\n      .catch(error => toast.error(error.message));\n\n    toggleModal();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: '2vh',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\">\n            {makeTitle(formType)}\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {/* Name */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              // autoFocus\n              onChange={handleChange}\n              value={name}\n            />\n\n            {/* Telephone */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              label=\"Telephone\"\n              type=\"tel\"\n              id=\"number\"\n              autoComplete=\"tel\"\n              onChange={handleChange}\n              value={number}\n            />\n\n            {/* Email */}\n            {/* <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={email}\n            /> */}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={!name || !number}\n              //   disabled={!name || !number || !email}\n            >\n              {buttonText}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\n// ######################\n\nfunction getInitialValues(formType, editValues) {\n  let initNameValue, initNumberValue, buttonText, operation;\n\n  if (formType === 'add') {\n    initNameValue = '';\n    initNumberValue = '';\n    buttonText = 'Add contact';\n  }\n  if (formType === 'edit') {\n    initNameValue = editValues.name;\n    initNumberValue = editValues.number;\n    buttonText = 'Save changes';\n  }\n\n  return { initNameValue, initNumberValue, buttonText, operation };\n}\n\nfunction makeTitle(formType) {\n  let title = '';\n\n  if (formType === 'add') title = 'Add a New Contact';\n  if (formType === 'edit') title = 'Edit Contact';\n\n  return title;\n}\n\nfunction getDispatchData(formType, editValues, data) {\n  let operationArgs, toastMessage, operation;\n\n  if (formType === 'add') {\n    operation = addContact;\n    operationArgs = data;\n    toastMessage = `Contact '${data.name}' was added`;\n  }\n\n  if (formType === 'edit') {\n    const id = editValues.id;\n\n    operation = editContact;\n    operationArgs = { id, editedContact: data };\n    toastMessage = 'Changes have been saved';\n  }\n\n  return { operation, operationArgs, toastMessage };\n}\n\n// Check if contact with this name already exists\nconst checkIfContactExists = (items, nameToCompare) =>\n  items.find(({ name }) => name.toLowerCase() === nameToCompare.toLowerCase());\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { faker } from '@faker-js/faker';\n\nimport Modal from 'components/Modal';\n// import Section from 'components/Section';\n\nimport {\n  // EditButton,\n  // DeleteButton,\n  ButtonWrapper,\n  CardWrapper,\n  Image,\n  ImageWrapper,\n  Meta,\n  Name,\n  TelephoneLink,\n  EmailLink,\n} from './Card.styled';\nimport { toast } from 'react-hot-toast';\n// import ContactDataForm from 'components/Forms/ContactDataForm/ContactDataForm';\nimport ContactFormMUI from 'components/Forms/ContactFormMUI';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\n// ##################################################\n\nexport default function Card() {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(!showModal);\n\n  const dispatch = useDispatch();\n\n  const { items, currentId } = useSelector(selectContacts);\n  const {\n    name,\n    number,\n    // email, image\n  } = items.find(item => item.id === currentId);\n\n  const email = faker.internet.exampleEmail();\n  const image = faker.image.avatar();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id))\n      .then(data => {\n        if (data.error) throw new Error(data.payload);\n        return toast.success('Contact has been deleted');\n      })\n      .catch(error => toast.error(error.message));\n  };\n\n  const values = {\n    name,\n    number,\n    // email,\n    id: currentId,\n  };\n\n  return (\n    <CardWrapper>\n      <ImageWrapper>\n        <Image src={image} alt={name} width={640} />\n      </ImageWrapper>\n\n      <Meta>\n        <Name>{name}</Name>\n\n        <TelephoneLink href={`tel:+${number}`}>{number}</TelephoneLink>\n\n        <EmailLink href={`mailto:${email}`}>{email}</EmailLink>\n      </Meta>\n\n      <ButtonWrapper>\n        {/* <EditButton type=\"button\" onClick={toggleModal}>\n          Edit\n        </EditButton> */}\n\n        {/* <DeleteButton type=\"button\" onClick={() => handleDelete(currentId)}>\n          Delete\n        </DeleteButton> */}\n\n        <Button\n          variant=\"outlined\"\n          startIcon={<EditIcon />}\n          onClick={toggleModal}\n        >\n          Edit\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"error\"\n          startIcon={<DeleteIcon />}\n          onClick={() => handleDelete(currentId)}\n        >\n          Delete\n        </Button>\n      </ButtonWrapper>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          {/* <Section title=\"Edit Contact\">\n            <ContactDataForm\n              formType=\"edit\"\n              editValues={values}\n              toggleModal={toggleModal}\n            />\n          </Section> */}\n          <ContactFormMUI\n            formType={'edit'}\n            editValues={values}\n            toggleModal={toggleModal}\n          />\n        </Modal>\n      )}\n    </CardWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { CiCircleInfo } from 'react-icons/ci';\nimport { RxCrossCircled } from 'react-icons/rx';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  color: silver;\n\n  margin-top: 20vh;\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const InfoIcon = styled(CiCircleInfo)`\n  --size: 5rem;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const ErrorIcon = styled(RxCrossCircled)`\n  --size: 5rem;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const Message = styled.p`\n  font-size: 1.5rem;\n  text-align: center;\n`;\n","import { ErrorIcon, InfoIcon, Message, Text, Wrapper } from './Prompt.styled';\n\nexport default function Prompt({ isError = false, isEmpty }) {\n  const errorMessages = [\n    'Something went wrong',\n    'Try refreshing the page or check back later',\n  ];\n  const infoMessages = [\n    isEmpty ? 'Phonebook is empty' : 'Select a contact to view details',\n  ];\n  const messages = isError ? errorMessages : infoMessages;\n\n  return (\n    <Wrapper>\n      {isError ? <ErrorIcon /> : <InfoIcon />}\n      <Text>\n        {messages.map((message, index) => (\n          <Message key={index}>{message}</Message>\n        ))}\n      </Text>\n    </Wrapper>\n  );\n}\n","import { AccentedIconButton } from 'styling/buttons';\n\nimport styled from 'styled-components';\nimport { HiPlus, HiChevronDoubleRight } from 'react-icons/hi';\n\n// Body height adjust to compensate for positioned header height\nconst header = document.querySelector('.header');\nconst { height: headerHeight } = header.getBoundingClientRect();\nconst subtractedValue = `${headerHeight}px`;\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  height: calc(100vh - ${subtractedValue});\n`;\n\nexport const LeftSide = styled.div`\n  padding: 25px;\n  padding-top: 50px;\n  max-width: 450px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  flex-grow: 1;\n\n  --background-fallback: rgb(245, 245, 245);\n  --gradient-start-color: rgba(240, 248, 255, 1);\n  --gradient-end-color: rgba(245, 245, 245, 1);\n\n  background: var(--background-fallback);\n  background: linear-gradient(\n    0deg,\n    var(--gradient-start-color) 55%,\n    var(--gradient-end-color) 100%\n  );\n\n  /* background: linear-gradient(105.62deg, #524abe -7.88%, #6684ff 100%); */\n`;\n\nexport const RightSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  padding-top: 50px;\n  flex-grow: 1;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  gap: 10px;\n`;\n\nexport const NewContactIconButton = styled(AccentedIconButton)`\n  --size: 40px;\n`;\n\nexport const NewRandomContactButton = styled(AccentedIconButton)`\n  --size: 40px;\n`;\n\nexport const AddIcon = styled(HiPlus)`\n  --size: 50%;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const AddRandomIcon = styled(HiChevronDoubleRight)`\n  --size: 50%;\n  height: var(--size);\n  width: var(--size);\n`;\n\nexport const Bar = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\n\nimport { faker } from '@faker-js/faker';\nimport { toast } from 'react-hot-toast';\n\n// import Section from 'components/Section';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Forms/Filter';\nimport Modal from 'components/Modal';\nimport Card from 'components/Card';\nimport Prompt from 'components/Prompt';\n// import ContactDataForm from 'components/Forms/ContactDataForm';\nimport ContactFormMUI from 'components/Forms/ContactFormMUI';\n\nimport {\n  AddIcon,\n  NewContactIconButton,\n  LeftSide,\n  RightSide,\n  Bar,\n  PageWrapper,\n  NewRandomContactButton,\n  ButtonsWrapper,\n  AddRandomIcon,\n} from './Contacts.styled';\n\n// ################################################\n\nexport default function Contacts() {\n  const { items, isLoading, error, currentId } = useSelector(selectContacts);\n\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(!showModal);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .catch(() =>\n        toast.error('Error loading contacts. Please refresh the page')\n      );\n  }, [dispatch]);\n\n  const addRandomContact = () => {\n    const randomContact = {\n      name: faker.person.fullName(),\n      number: faker.phone.number(),\n      // email: faker.internet.exampleEmail(),\n      // image: faker.internet.avatar(),\n    };\n\n    dispatch(addContact(randomContact))\n      .then(\n        toast.success(`${randomContact.name} has been added to the phonebook`)\n      )\n      .catch(er => toast.error(er.message));\n  };\n\n  return (\n    <PageWrapper>\n      <LeftSide>\n        <Bar>\n          <Filter />\n\n          <ButtonsWrapper>\n            <NewContactIconButton\n              type=\"button\"\n              onClick={toggleModal}\n              disabled={error}\n              aria-label=\"New contact\"\n            >\n              <AddIcon />\n            </NewContactIconButton>\n\n            <NewRandomContactButton\n              type=\"button\"\n              onClick={addRandomContact}\n              disabled={error}\n              aria-label=\"New random contact (for testing)\"\n            >\n              <AddRandomIcon />\n            </NewRandomContactButton>\n          </ButtonsWrapper>\n        </Bar>\n\n        {items.length > 0 && <ContactsList />}\n      </LeftSide>\n\n      <RightSide>\n        {!currentId && !error && <Prompt isEmpty={items.length === 0} />}\n        {!isLoading && error && <Prompt isError={error !== null} />}\n\n        {currentId && !error && <Card />}\n      </RightSide>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          {/* <Section title=\"New Contact\">\n            <ContactDataForm formType={'add'} toggleModal={toggleModal} />\n          </Section> */}\n          <ContactFormMUI formType={'add'} toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </PageWrapper>\n  );\n}\n","import Contacts from 'components/Contacts';\nimport { Helmet } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const { isLoggedIn } = useSelector(selectAuth);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n        <meta name=\"description\" content=\"My contacts\" />\n      </Helmet>\n\n      {isLoggedIn && <Contacts />}\n    </>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ContactLink","_templateObject3","_templateObject4","_templateObject5","_ref","theme","borderRadius","large","_ref2","colors","highlightedText","Contacts","dispatch","useDispatch","visibleContacts","useSelector","selectVisibleContacts","sortedContacts","_toConsumableArray","sort","a","b","name","localeCompare","handleContactClick","event","preventDefault","setSelectedContactId","target","id","_jsx","children","map","phone","href","onClick","TextField","MUITextField","AccentedButton","BaseTextField","Filter","items","selectContacts","filter","selectFilter","useEffect","textField","document","querySelector","length","setAttribute","removeAttribute","type","value","onChange","normalizedFilter","toLowerCase","trim","updateFilter","placeholder","concat","Overlay","ModalContent","regular","modalRoot","Modal","onClose","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","BaseCardLink","NavLink","_ref3","accent","_ref4","_ref5","_ref6","_ref7","accentDark","CardWrapper","ImageWrapper","boxShadow","Image","Meta","Name","TelephoneLink","_templateObject6","EmailLink","_templateObject7","ButtonWrapper","_templateObject8","DeleteIcon","BaseButton","_templateObject9","_templateObject10","warning","BsTrash3","_templateObject11","BaseIconButton","_templateObject12","secondaryText","defaultTheme","createTheme","ContactFormMUI","formType","_ref$editValues","editValues","toggleModal","_getInitialValues","initNameValue","initNumberValue","buttonText","operation","number","getInitialValues","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_event$currentTarget","ThemeProvider","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","makeTitle","onSubmit","_getDispatchData","data","operationArgs","toastMessage","addContact","editContact","editedContact","getDispatchData","checkIfContactExists","toast","unwrap","then","error","Error","payload","catch","message","noValidate","mt","margin","required","fullWidth","label","autoComplete","Button","mb","disabled","title","nameToCompare","find","Card","showModal","setShowModal","_useSelector","currentId","_items$find","item","email","faker","image","values","src","alt","width","startIcon","EditIcon","color","deleteContact","Wrapper","Text","InfoIcon","CiCircleInfo","ErrorIcon","RxCrossCircled","Message","Prompt","_ref$isError","isError","isEmpty","messages","index","headerHeight","getBoundingClientRect","height","subtractedValue","PageWrapper","LeftSide","RightSide","ButtonsWrapper","NewContactIconButton","AccentedIconButton","NewRandomContactButton","AddIcon","HiPlus","AddRandomIcon","HiChevronDoubleRight","Bar","isLoading","fetchContacts","randomContact","er","ContactsList","ContactsPage","isLoggedIn","selectAuth","_Fragment","Helmet","content"],"sourceRoot":""}